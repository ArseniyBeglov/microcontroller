;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 18.12.2021 11:28:03
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x0200C7  	LJMP 199
0x0003	0x020000  	LJMP 0
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x020000  	LJMP 0
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x020000  	LJMP 0
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020000  	LJMP 0
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
0x0026	0x00      	NOP
0x0027	0x00      	NOP
0x0028	0x00      	NOP
0x0029	0x00      	NOP
0x002A	0x00      	NOP
0x002B	0x020000  	LJMP 0
_connect:
;fin.c,16 :: 		void connect() {
;fin.c,17 :: 		P2_0_bit = 0;
0x002E	0xC2A0    	CLR P2_0_bit
;fin.c,19 :: 		SPDR = 0b00000110;
0x0030	0x758606  	MOV SPDR, #6
;fin.c,20 :: 		while (SPIF_bit == 0){}
L_connect0:
0x0033	0xE5AA    	MOV A, SPIF_bit
0x0035	0x20E702  	JB ACC.B7, L_connect1
0x0038	0x80F9    	SJMP L_connect0
L_connect1:
;fin.c,21 :: 		SPDR = 0b00000000;
0x003A	0x758600  	MOV SPDR, #0
;fin.c,22 :: 		while (SPIF_bit == 0){}
L_connect2:
0x003D	0xE5AA    	MOV A, SPIF_bit
0x003F	0x20E702  	JB ACC.B7, L_connect3
0x0042	0x80F9    	SJMP L_connect2
L_connect3:
;fin.c,23 :: 		P0 = SPDR << 4;
0x0044	0x7804    	MOV R0, #4
0x0046	0xE586    	MOV A, SPDR
0x0048	0x08      	INC R0
0x0049	0x8002    	SJMP L__connect11
L__connect12:
0x004B	0xC3      	CLR C
0x004C	0x33      	RLC A
L__connect11:
0x004D	0xD8FC    	DJNZ R0, L__connect12
0x004F	0xF580    	MOV P0, A
;fin.c,24 :: 		SPDR = 0b00000000;
0x0051	0x758600  	MOV SPDR, #0
;fin.c,25 :: 		while (SPIF_bit == 0){}
L_connect4:
0x0054	0xE5AA    	MOV A, SPIF_bit
0x0056	0x20E702  	JB ACC.B7, L_connect5
0x0059	0x80F9    	SJMP L_connect4
L_connect5:
;fin.c,26 :: 		P0 = (SPDR >> 4) | P0;
0x005B	0x7904    	MOV R1, #4
0x005D	0xE586    	MOV A, SPDR
0x005F	0x09      	INC R1
0x0060	0x8002    	SJMP L__connect13
L__connect14:
0x0062	0xC3      	CLR C
0x0063	0x13      	RRC A
L__connect13:
0x0064	0xD9FC    	DJNZ R1, L__connect14
0x0066	0xF8      	MOV R0, A
0x0067	0x4280    	ORL P0, A
;fin.c,28 :: 		P2_0_bit = 1;
0x0069	0xD2A0    	SETB P2_0_bit
;fin.c,30 :: 		}
0x006B	0x22      	RET
; end of _connect
_Uart_write_char:
;fin.c,48 :: 		void Uart_write_char(unsigned char character)
;fin.c,51 :: 		SBUF = 0;
0x006C	0x759900  	MOV SBUF, #0
;fin.c,52 :: 		SBUF=character;          //load the character to be transmitted in to the buffer reg
0x006F	0x850899  	MOV SBUF, FARG_Uart_write_char_character+0
;fin.c,53 :: 		while(!TI_bit);              //wait until transmission complete
L_Uart_write_char6:
0x0072	0x209902  	JB TI_bit, L_Uart_write_char7
0x0075	0x80FB    	SJMP L_Uart_write_char6
L_Uart_write_char7:
;fin.c,54 :: 		TI_bit=0;                    //clear flag
0x0077	0xC299    	CLR TI_bit
;fin.c,56 :: 		}
0x0079	0x22      	RET
; end of _Uart_write_char
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x007A	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x007B	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x007C	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x007D	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x007E	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x007F	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x0081	0x22      	RET
; end of ___CC2D
_SPI_init:
;fin.c,6 :: 		void SPI_init(){
;fin.c,7 :: 		SPR1_bit = 1;
0x0082	0xD3      	SETB C
0x0083	0xE5D5    	MOV A, SPR1_bit
0x0085	0x92E1    	MOV #224.B1, C
0x0087	0xF5D5    	MOV SPR1_bit, A
;fin.c,8 :: 		SPR0_bit = 1;
0x0089	0xD3      	SETB C
0x008A	0xE5D5    	MOV A, SPR0_bit
0x008C	0x92E0    	MOV #224.B0, C
0x008E	0xF5D5    	MOV SPR0_bit, A
;fin.c,9 :: 		MSTR_bit = 1;
0x0090	0xD3      	SETB C
0x0091	0xE5D5    	MOV A, MSTR_bit
0x0093	0x92E4    	MOV #224.B4, C
0x0095	0xF5D5    	MOV MSTR_bit, A
;fin.c,10 :: 		CPOL_bit = 1;
0x0097	0xD3      	SETB C
0x0098	0xE5D5    	MOV A, CPOL_bit
0x009A	0x92E3    	MOV #224.B3, C
0x009C	0xF5D5    	MOV CPOL_bit, A
;fin.c,11 :: 		SPIE_bit = 1;
0x009E	0xD3      	SETB C
0x009F	0xE5D5    	MOV A, SPIE_bit
0x00A1	0x92E7    	MOV #224.B7, C
0x00A3	0xF5D5    	MOV SPIE_bit, A
;fin.c,13 :: 		SPE_bit = 1;
0x00A5	0xD3      	SETB C
0x00A6	0xE5D5    	MOV A, SPE_bit
0x00A8	0x92E6    	MOV #224.B6, C
0x00AA	0xF5D5    	MOV SPE_bit, A
;fin.c,14 :: 		}
0x00AC	0x22      	RET
; end of _SPI_init
_UART_init:
;fin.c,32 :: 		void UART_init()
;fin.c,35 :: 		ES_bit = 1;
0x00AD	0xD2AC    	SETB ES_bit
;fin.c,36 :: 		SCON=0x50;            //configure serial control register
0x00AF	0x759850  	MOV SCON, #80
;fin.c,37 :: 		PCON=0x80;            //SMOD bit set
0x00B2	0x758780  	MOV PCON, #128
;fin.c,38 :: 		TMOD=0x20;           //using timer1,8-bit reload mode for baudrate generation
0x00B5	0x758920  	MOV TMOD, #32
;fin.c,39 :: 		TCLK_bit = 1;
0x00B8	0xD2CC    	SETB TCLK_bit
;fin.c,40 :: 		RCLK_bit = 1;
0x00BA	0xD2CD    	SETB RCLK_bit
;fin.c,41 :: 		EA_bit = 1;
0x00BC	0xD2AF    	SETB EA_bit
;fin.c,42 :: 		RCAP2H=0xFF;
0x00BE	0x75CBFF  	MOV RCAP2H, #255
;fin.c,43 :: 		RCAP2L=0xFF - 15;            //19200 baudrate(16 mhz clock)
0x00C1	0x75CAF0  	MOV RCAP2L, #240
;fin.c,44 :: 		TR2_bit=1;               //start timer
0x00C4	0xD2CA    	SETB TR2_bit
;fin.c,45 :: 		}
0x00C6	0x22      	RET
; end of _UART_init
_main:
0x00C7	0x758180  	MOV SP, #128
;fin.c,58 :: 		void main()
;fin.c,60 :: 		SPI_init();
0x00CA	0x1182    	ACALL _SPI_init
;fin.c,61 :: 		UART_init();
0x00CC	0x11AD    	ACALL _UART_init
;fin.c,62 :: 		P2_0_bit = 1;
0x00CE	0xD2A0    	SETB P2_0_bit
;fin.c,65 :: 		do {
L_main8:
;fin.c,66 :: 		P2_0_bit = 1;
0x00D0	0xD2A0    	SETB P2_0_bit
;fin.c,67 :: 		connect();
0x00D2	0x112E    	ACALL _connect
;fin.c,68 :: 		Uart_write_char(P0);
0x00D4	0x858008  	MOV FARG_Uart_write_char_character, P0+0
0x00D7	0x116C    	ACALL _Uart_write_char
;fin.c,69 :: 		Delay_ms(1);
0x00D9	0x7E02    	MOV R6, 2
0x00DB	0x7F9D    	MOV R7, 157
0x00DD	0xDFFE    	DJNZ R7, PC-2
0x00DF	0xDEFC    	DJNZ R6, PC-4
0x00E1	0x00      	NOP
;fin.c,70 :: 		} while(1);
0x00E2	0x80EC    	SJMP L_main8
;fin.c,72 :: 		}
0x00E4	0x80FE    	SJMP #254
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x002E      [62]    _connect
0x006C      [14]    _Uart_write_char
0x007A       [8]    ___CC2D
0x0082      [43]    _SPI_init
0x00AD      [26]    _UART_init
0x00C7      [31]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    FARG_Uart_write_char_character
0x0080       [1]    P0
0x0081       [1]    SP
0x0082       [1]    DPL
0x0083       [1]    DPH
0x0086       [1]    SPDR
0x0087       [1]    PCON
0x0089       [1]    TMOD
0x0098       [1]    SCON
0x0098       [0]    TI_bit
0x0099       [1]    SBUF
0x00A0       [0]    P2_0_bit
0x00A8       [0]    EA_bit
0x00A8       [0]    ES_bit
0x00AA       [0]    SPIF_bit
0x00C8       [0]    TR2_bit
0x00C8       [0]    TCLK_bit
0x00C8       [0]    RCLK_bit
0x00CA       [1]    RCAP2L
0x00CB       [1]    RCAP2H
0x00D0       [1]    PSW
0x00D5       [0]    MSTR_bit
0x00D5       [0]    SPIE_bit
0x00D5       [0]    SPE_bit
0x00D5       [0]    CPOL_bit
0x00D5       [0]    SPR0_bit
0x00D5       [0]    SPR1_bit
0x00E0       [1]    ACC
0x00F0       [1]    B
//** Label List: ** 
//----------------------------------------------
  L_connect0
  L_connect1
  L_connect2
  L_connect3
  L_connect4
  L_connect5
  L_Uart_write_char6
  L_Uart_write_char7
  L_main8
  L_main9
  L_main10
  _SPI_init
  _connect
  L__connect11
  L__connect12
  L__connect13
  L__connect14
  _UART_init
  _Uart_write_char
  _main
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
