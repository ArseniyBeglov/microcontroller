;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 06.06.2024 18:17:34
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x020161  	LJMP 353
0x0003	0x020000  	LJMP 0
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x020000  	LJMP 0
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x020000  	LJMP 0
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020000  	LJMP 0
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
0x0026	0x00      	NOP
0x0027	0x00      	NOP
0x0028	0x00      	NOP
0x0029	0x00      	NOP
0x002A	0x00      	NOP
0x002B	0x020000  	LJMP 0
_LCDsend4bit:
;MyProject.c,40 :: 		void LCDsend4bit(char buf){
;MyProject.c,41 :: 		P2 = buf;
0x002E	0x8513A0  	MOV P2, FARG_LCDsend4bit_buf+0
;MyProject.c,42 :: 		if(comFlag == 1){
0x0031	0xE543    	MOV A, _flags
0x0033	0x30E204  	JNB ACC.B2, L_LCDsend4bit0
;MyProject.c,43 :: 		LCD_RS = 0;
0x0036	0xC292    	CLR P1_2_bit
;MyProject.c,44 :: 		}
0x0038	0x8002    	SJMP L_LCDsend4bit1
L_LCDsend4bit0:
;MyProject.c,46 :: 		LCD_RS = 1;
0x003A	0xD292    	SETB P1_2_bit
;MyProject.c,47 :: 		}
L_LCDsend4bit1:
;MyProject.c,48 :: 		LCD_EN = 1;
0x003C	0xD295    	SETB P1_5_bit
;MyProject.c,49 :: 		LCD_EN = 0;
0x003E	0xC295    	CLR P1_5_bit
;MyProject.c,50 :: 		}
0x0040	0x22      	RET
; end of _LCDsend4bit
_LCDsend:
;MyProject.c,52 :: 		void LCDsend(char buf){
;MyProject.c,53 :: 		Delay_ms(1);
0x0041	0x7E02    	MOV R6, 2
0x0043	0x7F9D    	MOV R7, 157
0x0045	0xDFFE    	DJNZ R7, PC-2
0x0047	0xDEFC    	DJNZ R6, PC-4
0x0049	0x00      	NOP
;MyProject.c,54 :: 		LCDsend4bit(buf&0xf0);
0x004A	0xE512    	MOV A, FARG_LCDsend_buf
0x004C	0x54F0    	ANL A, #240
0x004E	0xF513    	MOV FARG_LCDsend4bit_buf, A
0x0050	0x112E    	ACALL _LCDsend4bit
;MyProject.c,55 :: 		LCDsend4bit(buf<<4);
0x0052	0x7804    	MOV R0, #4
0x0054	0xE512    	MOV A, FARG_LCDsend_buf
0x0056	0x08      	INC R0
0x0057	0x8002    	SJMP L__LCDsend80
L__LCDsend81:
0x0059	0xC3      	CLR C
0x005A	0x33      	RLC A
L__LCDsend80:
0x005B	0xD8FC    	DJNZ R0, L__LCDsend81
0x005D	0xF513    	MOV FARG_LCDsend4bit_buf, A
0x005F	0x112E    	ACALL _LCDsend4bit
;MyProject.c,56 :: 		}
0x0061	0x22      	RET
; end of _LCDsend
_LCDsendSymb:
;MyProject.c,69 :: 		void LCDsendSymb(char symbol)
;MyProject.c,74 :: 		comFlag = 0;
0x0062	0xC3      	CLR C
0x0063	0xE543    	MOV A, _flags
0x0065	0x92E2    	MOV #224.B2, C
0x0067	0xF543    	MOV _flags, A
;MyProject.c,75 :: 		LCDsend(symbol);
0x0069	0x851112  	MOV FARG_LCDsend_buf, FARG_LCDsendSymb_symbol+0
0x006C	0x1141    	ACALL _LCDsend
;MyProject.c,76 :: 		}
0x006E	0x22      	RET
; end of _LCDsendSymb
_LCDSendCom:
;MyProject.c,58 :: 		void LCDSendCom(char command){
;MyProject.c,59 :: 		comFlag = 1;
0x006F	0xD3      	SETB C
0x0070	0xE543    	MOV A, _flags
0x0072	0x92E2    	MOV #224.B2, C
0x0074	0xF543    	MOV _flags, A
;MyProject.c,60 :: 		LCDsend(command);
0x0076	0x851112  	MOV FARG_LCDsend_buf, FARG_LCDSendCom_command+0
0x0079	0x1141    	ACALL _LCDsend
;MyProject.c,61 :: 		}
0x007B	0x22      	RET
; end of _LCDSendCom
_LCDclear:
;MyProject.c,63 :: 		void LCDclear()
;MyProject.c,66 :: 		LCDSendCom(CLEAR);
0x007C	0x751101  	MOV FARG_LCDSendCom_command, #1
0x007F	0x116F    	ACALL _LCDSendCom
;MyProject.c,67 :: 		}
0x0081	0x22      	RET
; end of _LCDclear
_LCDsendData:
;MyProject.c,86 :: 		void LCDsendData(char* symbols)
;MyProject.c,88 :: 		char iter = 0;
0x0082	0x751000  	MOV LCDsendData_iter_L0, #0
;MyProject.c,89 :: 		while(*(symbols+iter) != 0)
L_LCDsendData2:
0x0085	0xE50F    	MOV A, FARG_LCDsendData_symbols
0x0087	0x2510    	ADD A, LCDsendData_iter_L0
0x0089	0xF8      	MOV R0, A
0x008A	0x8601    	MOV R1, @R0
0x008C	0xE9      	MOV A, R1
0x008D	0x600D    	JZ L_LCDsendData3
;MyProject.c,91 :: 		LCDsendSymb(*(symbols+iter));
0x008F	0xE50F    	MOV A, FARG_LCDsendData_symbols
0x0091	0x2510    	ADD A, LCDsendData_iter_L0
0x0093	0xF8      	MOV R0, A
0x0094	0x8611    	MOV FARG_LCDsendSymb_symbol, @R0
0x0096	0x1162    	ACALL _LCDsendSymb
;MyProject.c,92 :: 		iter++;
0x0098	0x0510    	INC LCDsendData_iter_L0
;MyProject.c,93 :: 		}
0x009A	0x80E9    	SJMP L_LCDsendData2
L_LCDsendData3:
;MyProject.c,94 :: 		}
0x009C	0x22      	RET
; end of _LCDsendData
_Mul_16x16:
;__Lib_Math.c,112 :: 		
;__Lib_Math.c,114 :: 		
0x009D	0xE8      	MOV A, R0
;__Lib_Math.c,115 :: 		
0x009E	0x8CF0    	MOV B, R4
;__Lib_Math.c,116 :: 		
0x00A0	0xA4      	MUL AB
;__Lib_Math.c,117 :: 		
0x00A1	0xAFF0    	MOV R7, B
;__Lib_Math.c,118 :: 		
0x00A3	0xC8      	XCH A, R0
;__Lib_Math.c,119 :: 		
0x00A4	0x8DF0    	MOV B, R5
;__Lib_Math.c,120 :: 		
0x00A6	0xA4      	MUL AB
;__Lib_Math.c,121 :: 		
0x00A7	0x2F      	ADD A, R7
;__Lib_Math.c,122 :: 		
0x00A8	0xC9      	XCH A, R1
;__Lib_Math.c,123 :: 		
0x00A9	0x8CF0    	MOV B, R4
;__Lib_Math.c,124 :: 		
0x00AB	0xA4      	MUL AB
;__Lib_Math.c,125 :: 		
0x00AC	0x29      	ADD A, R1
;__Lib_Math.c,126 :: 		
0x00AD	0xF9      	MOV R1, A
;__Lib_Math.c,128 :: 		
0x00AE	0x22      	RET
; end of _Mul_16x16
_UART1read:
;MyProject.c,205 :: 		char UART1read(){
;MyProject.c,206 :: 		return SBUF;
0x00AF	0xA899    	MOV R0, SBUF
;MyProject.c,207 :: 		}
0x00B1	0x22      	RET
; end of _UART1read
_LCDsendMsg:
;MyProject.c,122 :: 		void LCDsendMsg(char* msg)
;MyProject.c,124 :: 		LCDclear();
0x00B2	0x117C    	ACALL _LCDclear
;MyProject.c,125 :: 		LCDsendData(msg);
0x00B4	0x850E0F  	MOV FARG_LCDsendData_symbols, FARG_LCDsendMsg_msg+0
0x00B7	0x1182    	ACALL _LCDsendData
;MyProject.c,126 :: 		}
0x00B9	0x22      	RET
; end of _LCDsendMsg
_LCDstart:
;MyProject.c,78 :: 		void LCDstart(){
;MyProject.c,79 :: 		LCDSendCom(0x02);  // 4-х битный режим
0x00BA	0x751102  	MOV FARG_LCDSendCom_command, #2
0x00BD	0x116F    	ACALL _LCDSendCom
;MyProject.c,80 :: 		LCDSendCom(0x28);  //16*2 в 4-х битном режиме
0x00BF	0x751128  	MOV FARG_LCDSendCom_command, #40
0x00C2	0x116F    	ACALL _LCDSendCom
;MyProject.c,81 :: 		LCDSendCom(0x0f);  //дисплей включен, курсор мигает
0x00C4	0x75110F  	MOV FARG_LCDSendCom_command, #15
0x00C7	0x116F    	ACALL _LCDSendCom
;MyProject.c,82 :: 		LCDSendCom(FIRST_ROW);
0x00C9	0x751180  	MOV FARG_LCDSendCom_command, #128
0x00CC	0x116F    	ACALL _LCDSendCom
;MyProject.c,83 :: 		LCDclear();
0x00CE	0x117C    	ACALL _LCDclear
;MyProject.c,84 :: 		}
0x00D0	0x22      	RET
; end of _LCDstart
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x00D1	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x00D2	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x00D3	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x00D4	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x00D5	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x00D6	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x00D8	0x22      	RET
; end of ___CC2D
_insertUART:
;MyProject.c,209 :: 		int insertUART(char digCount)
;MyProject.c,211 :: 		char digitCount = 0;
0x00D9	0x750900  	MOV insertUART_digitCount_L0, #0
0x00DC	0x750A00  	MOV insertUART_value_L0, #0
0x00DF	0x750B00  	MOV insertUART_value_L0+1, #0
;MyProject.c,214 :: 		int value=0;
;MyProject.c,215 :: 		Delay_ms(100);
0x00E2	0x7EA3    	MOV R6, 163
0x00E4	0x7F1E    	MOV R7, 30
0x00E6	0xDFFE    	DJNZ R7, PC-2
0x00E8	0xDEFC    	DJNZ R6, PC-4
0x00EA	0x00      	NOP
;MyProject.c,217 :: 		while(1){
L_insertUART42:
;MyProject.c,218 :: 		cicleFlag = 1;
0x00EB	0xD3      	SETB C
0x00EC	0xE543    	MOV A, _flags
0x00EE	0x92E0    	MOV #224.B0, C
0x00F0	0xF543    	MOV _flags, A
;MyProject.c,219 :: 		LCDclear();
0x00F2	0x117C    	ACALL _LCDclear
;MyProject.c,220 :: 		while (cicleFlag) {
L_insertUART44:
0x00F4	0xE543    	MOV A, _flags
0x00F6	0x30E059  	JNB ACC, L_insertUART45
;MyProject.c,221 :: 		if (RI_bit) {
0x00F9	0x309854  	JNB RI_bit, L_insertUART46
;MyProject.c,222 :: 		uartRd = UART1read();
0x00FC	0x11AF    	ACALL _UART1read
0x00FE	0x85000D  	MOV insertUART_uartRd_L0, 0
;MyProject.c,223 :: 		digit = uartRd - '0';
0x0101	0xC3      	CLR C
0x0102	0xE8      	MOV A, R0
0x0103	0x9430    	SUBB A, #48
0x0105	0xF9      	MOV R1, A
0x0106	0x85010C  	MOV insertUART_digit_L0, 1
;MyProject.c,224 :: 		if(digit >=0 && digit <=9){
0x0109	0xC3      	CLR C
0x010A	0xE9      	MOV A, R1
0x010B	0x9400    	SUBB A, #0
0x010D	0x4032    	JC L_insertUART49
0x010F	0xD3      	SETB C
0x0110	0xE50C    	MOV A, insertUART_digit_L0
0x0112	0x9409    	SUBB A, #9
0x0114	0x502B    	JNC L_insertUART49
L__insertUART76:
;MyProject.c,225 :: 		digitCount++;
0x0116	0x0509    	INC insertUART_digitCount_L0
;MyProject.c,226 :: 		LCDsendSymb(uartRd);
0x0118	0x850D11  	MOV FARG_LCDsendSymb_symbol, insertUART_uartRd_L0+0
0x011B	0x1162    	ACALL _LCDsendSymb
;MyProject.c,227 :: 		if(digitCount > digCount){
0x011D	0xD3      	SETB C
0x011E	0xE509    	MOV A, insertUART_digitCount_L0
0x0120	0x9508    	SUBB A, FARG_insertUART_digCount
0x0122	0x4008    	JC L_insertUART50
;MyProject.c,228 :: 		LCDsendMsg(ErrorMsg);
0x0124	0x750E30  	MOV FARG_LCDsendMsg_msg, lo_addr(_errorMsg)
0x0127	0x11B2    	ACALL _LCDsendMsg
;MyProject.c,229 :: 		digitCount = 0;
0x0129	0x750900  	MOV insertUART_digitCount_L0, #0
;MyProject.c,230 :: 		}
L_insertUART50:
;MyProject.c,231 :: 		value = value * 10 + digit;
0x012C	0xA80A    	MOV R0, insertUART_value_L0
0x012E	0xA90B    	MOV R1, insertUART_value_L0+1
0x0130	0x7C0A    	MOV R4, #10
0x0132	0x7D00    	MOV R5, #0
0x0134	0x119D    	ACALL _Mul_16x16
0x0136	0xE50C    	MOV A, insertUART_digit_L0
0x0138	0x28      	ADD A, R0
0x0139	0xF50A    	MOV insertUART_value_L0, A
0x013B	0xE4      	CLR A
0x013C	0x39      	ADDC A, R1
0x013D	0xF50B    	MOV insertUART_value_L0+1, A
;MyProject.c,232 :: 		}
0x013F	0x800D    	SJMP L_insertUART51
L_insertUART49:
;MyProject.c,233 :: 		else if(uartRd == ' '){
0x0141	0xE50D    	MOV A, insertUART_uartRd_L0
0x0143	0x6420    	XRL A, #32
0x0145	0x7002    	JNZ L_insertUART52
;MyProject.c,235 :: 		}
0x0147	0x8005    	SJMP L_insertUART53
L_insertUART52:
;MyProject.c,237 :: 		LCDsendMsg(ErrorMsg);
0x0149	0x750E30  	MOV FARG_LCDsendMsg_msg, lo_addr(_errorMsg)
0x014C	0x11B2    	ACALL _LCDsendMsg
;MyProject.c,238 :: 		}
L_insertUART53:
L_insertUART51:
;MyProject.c,239 :: 		RI_bit=0;
0x014E	0xC298    	CLR RI_bit
;MyProject.c,240 :: 		}
L_insertUART46:
;MyProject.c,241 :: 		}
0x0150	0x80A2    	SJMP L_insertUART44
L_insertUART45:
;MyProject.c,242 :: 		}
0x0152	0x01EB    	AJMP L_insertUART42
;MyProject.c,244 :: 		}
0x0154	0x22      	RET
; end of _insertUART
_UART1start:
;MyProject.c,198 :: 		void UART1start(){
;MyProject.c,199 :: 		TMOD = 0x20;
0x0155	0x758920  	MOV TMOD, #32
;MyProject.c,200 :: 		TH1 = 0xF5;
0x0158	0x758DF5  	MOV TH1, #245
;MyProject.c,201 :: 		SCON = 0x50;
0x015B	0x759850  	MOV SCON, #80
;MyProject.c,202 :: 		TR1_bit = 1;
0x015E	0xD28E    	SETB TR1_bit
;MyProject.c,203 :: 		}
0x0160	0x22      	RET
; end of _UART1start
_main:
0x0161	0x758180  	MOV SP, #128
0x0164	0x12018C  	LCALL 396
;MyProject.c,305 :: 		void main() {
;MyProject.c,306 :: 		LCDstart();
0x0167	0x11BA    	ACALL _LCDstart
;MyProject.c,308 :: 		UART1start();
0x0169	0x3155    	ACALL _UART1start
;MyProject.c,309 :: 		number2 = insertUART(3);
0x016B	0x750803  	MOV FARG_insertUART_digCount, #3
0x016E	0x11D9    	ACALL _insertUART
0x0170	0x850041  	MOV _number2, 0
0x0173	0x850142  	MOV _number2+1, 1
;MyProject.c,310 :: 		}
0x0176	0x80FE    	SJMP #254
; end of _main
0x018C	0x7830    	MOV R0, 48
0x018E	0x7914    	MOV R1, 20
0x0190	0x758278  	MOV DP0L, 120
0x0193	0x758301  	MOV DP0H, 1
0x0196	0x1200D1  	LCALL 209
0x0199	0x22      	RET
;MyProject.c,0 :: ?ICS_errorMsg
0x0178	0x457272 ;?ICS_errorMsg+0
0x017B	0x6F722C ;?ICS_errorMsg+3
0x017E	0x207472 ;?ICS_errorMsg+6
0x0181	0x792061 ;?ICS_errorMsg+9
0x0184	0x676169 ;?ICS_errorMsg+12
0x0187	0x6E00 ;?ICS_errorMsg+15
; end of ?ICS_errorMsg
;MyProject.c,0 :: ?ICS_number2
0x0189	0xE703 ;?ICS_number2+0
; end of ?ICS_number2
;MyProject.c,0 :: ?ICS_flags
0x018B	0x80 ;?ICS_flags+0
; end of ?ICS_flags
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x002E      [19]    _LCDsend4bit
0x0041      [33]    _LCDsend
0x0062      [13]    _LCDsendSymb
0x006F      [13]    _LCDSendCom
0x007C       [6]    _LCDclear
0x0082      [27]    _LCDsendData
0x009D      [18]    _Mul_16x16
0x00AF       [3]    _UART1read
0x00B2       [8]    _LCDsendMsg
0x00BA      [23]    _LCDstart
0x00D1       [8]    ___CC2D
0x00D9     [124]    _insertUART
0x0155      [12]    _UART1start
0x0161      [23]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    FARG_insertUART_digCount
0x0009       [1]    insertUART_digitCount_L0
0x000A       [2]    insertUART_value_L0
0x000C       [1]    insertUART_digit_L0
0x000D       [1]    insertUART_uartRd_L0
0x000E       [1]    FARG_LCDsendMsg_msg
0x000F       [1]    FARG_LCDsendData_symbols
0x0010       [1]    LCDsendData_iter_L0
0x0011       [1]    FARG_LCDsendSymb_symbol
0x0011       [1]    FARG_LCDSendCom_command
0x0012       [1]    FARG_LCDsend_buf
0x0013       [1]    FARG_LCDsend4bit_buf
0x0030      [17]    _errorMsg
0x0041       [2]    _number2
0x0043       [0]    _comFlag
0x0043       [1]    _flags
0x0043       [0]    _cicleFlag
0x0081       [1]    SP
0x0082       [1]    DPL
0x0083       [1]    DPH
0x0088       [0]    TR1_bit
0x0089       [1]    TMOD
0x008D       [1]    TH1
0x0090       [0]    P1_2_bit
0x0090       [0]    LCD_EN
0x0090       [0]    LCD_RS
0x0090       [0]    P1_5_bit
0x0098       [0]    RI_bit
0x0098       [1]    SCON
0x0099       [1]    SBUF
0x00A0       [0]    P2_7_bit
0x00A0       [0]    P2_6_bit
0x00A0       [1]    P2
0x00A0       [0]    P2_5_bit
0x00A0       [0]    P2_4_bit
0x00D0       [1]    PSW
0x00E0       [1]    ACC
0x00F0       [1]    B
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0178      [17]    ?ICS_errorMsg
0x0189       [2]    ?ICS_number2
0x018B       [1]    ?ICS_flags
//** Label List: ** 
//----------------------------------------------
  L_LCDsend4bit0
  L_LCDsend4bit1
  L_LCDsendData2
  L_LCDsendData3
  L_numToSymb4
  L_numToSymb5
  L_numToSymb6
  L_numToSymb7
  L_numToSymb8
  L_numToSymb9
  L_insertNumber110
  L_insertNumber111
  L_insertNumber112
  L_insertNumber113
  L_insertNumber114
  L_insertNumber115
  L_insertNumber116
  L_insertNumber117
  L_insertNumber118
  L_insertNumber119
  L_insertNumber120
  L_insertNumber121
  L_insertNumber122
  L_insertNumber123
  L_insertNumber124
  L_insertNumber125
  L_insertNumber126
  L_insertNumber127
  L_insertNumber128
  L_insertNumber129
  L_insertNumber130
  L_insertNumber131
  L_insertNumber132
  L_insertNumber133
  L_insertNumber134
  L_insertNumber135
  L_insertNumber136
  L_insertNumber137
  L_insertNumber138
  L_insertNumber139
  L_insertNumber140
  L_insertNumber141
  L_insertUART42
  L_insertUART43
  L_insertUART44
  L_insertUART45
  L_insertUART46
  L_insertUART47
  L_insertUART48
  L_insertUART49
  L_insertUART50
  L_insertUART51
  L_insertUART52
  L_insertUART53
  L_LCDSendTimerStart54
  L_LCDSendTimerStart55
  L_LCDSendTimerStart56
  L_LCDSendTimerValue57
  L_LCDSendTimerValue58
  L_LCDSendTimerValue59
  L_LCDSendTimerValue60
  L_LCDSendTimerValue61
  L_LCDSendTimerValue62
  L_LCDSendTimerValue63
  L_LCDSendTimerValue64
  L_LCDSendTimerValue65
  L_LCDSendTimerValue66
  L_LCDSendTimerValue67
  L_timer0Step68
  L_timer0Step69
  L_timer0Step70
  L_timer0Step71
  L_timer0Step72
  L__insertNumber173
  L__insertNumber174
  L__insertNumber175
  L__insertUART76
  L__LCDSendTimerValue77
  L__LCDSendTimerValue78
  L__LCDSendTimerValue79
  _LCDsend4bit
  _LCDsend
  L__LCDsend80
  L__LCDsend81
  _LCDSendCom
  _LCDclear
  _LCDsendSymb
  _LCDstart
  _LCDsendData
  _numToSymb
  _LCDsendMsg
  _insertNumber1
  _UART1start
  _UART1read
  _insertUART
  _LCDSendTimerStart
  _LCDSendTimerValue
  L__LCDSendTimerValue82
  L__LCDSendTimerValue83
  _timer0Init
  _timer0Step
  _main
  lab_end
  loop_lab
  lab_end1
  lab_loop1
  lab_end2
  lab_loop3
  __Div_8x8_S_Bpositive
  __Div_8x8_S_Apositive
  __Div_8x8_S_Skip_Div
  __Div_8x8_S_div_ret
  __op2hi_not_zero
  __op1hi_not_zero
  __Div_16x16_U_Loop1
  __Div_16x16_U_Lab1
  __Div_16x16_U_div_ret
  __Div_16x16_U_Loop2
  __Div_16x16_U_Lab2
  __Div_16x16_U_Lab3
  __Div_16x16_S_op2hipositive
  __Div_16x16_S_op1hipositive
  __Div_16x16_S_Skip_Udiv
  __Div_16x16_S_div_ret
  __Div_32x32_U_start
  __Div_32x32_U_aux
  __Div_32x32_U_l2
  __Div_32x32_U_l1
  lw_1
  lw_2
  __Div_32x32_U_l3
  lw_3
  __Div_32x32_U_l4
  __Div_32x32_U_IR_l0
  __Div_32x32_U_l5
  __Div_32x32_U_l6
  __Div_32x32_U_l8
  __Div_32x32_U_l7
  __Div_32x32_U_IR_l1
  __Div_32x32_U_l10
  __Div_32x32_U_l9
  __Div_32x32_U_IR_l2
  __Div_32x32_S_l1
  __Div_32x32_S_call_uns
  __Div_32x32_S_l2
  __Div_32x32_S_l3
  __Div_32x32_S_div_ret
  __shl_long
  __shr_longint
  __shr_longword
  _Mul_16x16
  _Mul_32x32
  _Div_8x8_S
  _Div_16x16_U
  _Div_16x16_S
  _Div_32x32_U
  _Div_32x32_S
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
